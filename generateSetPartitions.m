function partitions = generateSetPartitions(n)
% generateSetPartitions Generuje wszystkie unikalne podzia³y zbioru n liczb naturalnych
% na dwa niepuste podzbiory, uwzglêdniaj¹c symetrie.
%
% Argumenty:
%   n - liczba naturalna, okreœlaj¹ca rozmiar zbioru (np. {1, 2, ..., n}).
%
% Zwraca:
%   partitions - Komórkowa tablica (cell array), gdzie ka¿da komórka zawiera
%                dwuelementow¹ komórkow¹ tablicê {podzbior_A, podzbior_B}
%                reprezentuj¹c¹ unikalny podzia³.
%
% Przyk³ad u¿ycia:
%   n = 3;
%   podzialy = generateSetPartitions(n);
%   disp(podzialy);
%
%   Dla n = 3, oczekiwane podzia³y (2^(3-1)-1 = 3 sposoby):
%   {1} {2,3}
%   {2} {1,3}
%   {3} {1,2}
%   generated by Gemini on 29.07.2025

    if n < 2
        partitions = {}; % Nie mo¿na podzieliæ zbioru na dwa niepuste podzbiory dla n < 2
        warning('Zbiór z mniej ni¿ 2 elementami nie mo¿e zostaæ podzielony na dwa niepuste podzbiory.');
        return;
    end

    elements = 1:n; % Zak³adamy, ¿e zbiór to {1, 2, ..., n}
    
    % Liczba unikalnych podzia³ów zgodna z Twoim wzorem
    num_unique_partitions = 2^(n-1) - 1;
    
    % Inicjalizacja tablicy na wyniki
    partitions = cell(1, num_unique_partitions);
    partition_idx = 1;

    % Pêtla od 1 do 2^(n-1) - 1
    % Zakres ten gwarantuje:
    % 1. Odjêcie maski 00...0 (wszystkie w jednym podzbiorze, drugi pusty)
    % 2. Odjêcie maski 11...1 (wszystkie w drugim podzbiorze, pierwszy pusty)
    % 3. Pomijanie duplikatów ze wzglêdu na symetriê (np. {A,B} i {B,A})
    for i = 1 : num_unique_partitions
        % Konwersja liczby ca³kowitej 'i' na n-bitow¹ reprezentacjê binarn¹
        % dec2bin zwraca string, odejmujemy '0' aby otrzymaæ tablicê numeryczn¹ [0, 1]
        binary_mask_str = dec2bin(i, n);
        mask = binary_mask_str - '0'; 

        % Tworzenie podzbiorów na podstawie maski
        % Jeœli bit jest 0, element trafia do subsetA
        % Jeœli bit jest 1, element trafia do subsetB
        subsetA = elements(mask == 0); 
        subsetB = elements(mask == 1); 
        
        % Zapisz podzia³
        partitions{partition_idx} = {subsetA, subsetB};
        partition_idx = partition_idx + 1;
    end
end
